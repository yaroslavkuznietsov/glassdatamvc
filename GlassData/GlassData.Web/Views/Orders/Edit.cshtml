@model GlassData.Web.ViewModels.OrderViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    <input type="hidden" name="PreviousUrl" value="@Model.PreviousUrl" />
    <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", null, null, null, new { href = Request.UrlReferrer })
</div>


@Html.Partial("_GlassesList", Model.GlassesList)


<!-- #region Old no partial structure -->
@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().Order.Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().TimeStamp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().LinePos)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().SourcePos)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().SourceSide)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().GlassId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().GlassHeight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().GlassWidth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().GlassThickness)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().GlassWeight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().DestRackPos)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().DestRackSide)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().PreviousHeight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().PreviousWidth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GlassesList.FirstOrDefault().GlassResult)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.GlassesList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeStamp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LinePos)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SourcePos)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SourceSide)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GlassId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GlassHeight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GlassWidth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GlassThickness)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GlassWeight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DestRackPos)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DestRackSide)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PreviousHeight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PreviousWidth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GlassResult)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>*@

<!-- #endregion -->
