@model GlassData.DataLibrary.Models.Customer

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<br />

<table class="table">
    <tr>
        <th>
        </th>
    </tr>
</table>

<div>
    @Html.ActionLink("New Order", "Create", "Orders", new { customerId = Model.Id, name = Model.Name, address = Model.Address, phone = Model.Phone }, null)
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.OrdersList.FirstOrDefault().Number)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrdersList.FirstOrDefault().DateTime)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.OrdersList)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTime)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", "Orders", new { id = item.Id, number = item.Number, dateTime = item.DateTime, customerId = Model.Id }, null) |
                @Html.ActionLink("Details", "Details", "Orders", new { id = item.Id, number = item.Number, dateTime = item.DateTime, customerId = Model.Id }, null) |
                @Html.ActionLink("Delete", "Delete", "Orders", new { id = item.Id, number = item.Number, dateTime = item.DateTime, customerId = Model.Id }, null)
            </td>
        </tr>
    }
</table>